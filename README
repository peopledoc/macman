######
macman
######

``macman`` is a project-centric high-level machine manager.

.. warning::

   This project is experimental.

.. note::

   ``macman`` was created as a wrapper around Vagrant, in order to manage
   several machines at once, and not only using VirtualBox. In recent versions
   of Vagrant support multiple machines, and VirtualBox is no longer the only
   supported machine backend. So ``macman`` may be discontinued.


*******
Example
*******

.. code:: sh

   # Register a new box.
   macman register helloworld

   # Configure the VM.
   macman configure helloworld cpus=2 ram=256
   macman configure helloworld ip=10.0.0.10
   # Have a look at generated configuration.
   cat etc/macman.cfg
   # And have a look at generated Vagrantfile (Vagrant is the default).
   cat var/vm/helloworld/Vagrantfile

   # Let's use the VM.
   macman start helloworld
   macman ssh helloworld
   macman stop helloworld

   # You can manage several VMs!
   macman register goodbye
   macman configure goodbye ram=192 ip=10.0.0.11
   macman start all
   macman stop all


********
Abstract
********

This script has been created to manage all project-related machines from one
place, the project's root folder.

Key features:

* ``macman`` command focuses on most important commands.
* Configuration file if simple.
* Detailed configuration (i.e. Vagrantfile) is generated with templates.
* Operate on several VMs at once (start, stop...)

You focus on few important settings such as cpus, ram or IP adress, and
delegate the tricky things to scripts or templates) you share with your team.


************
Installation
************

With pip:

.. code:: sh

   pip install -e git+git@github.com:novagile/vagrant_vm_manager.git#egg=macman


********
Commands
********

- register MACHINE
- start MACHINE
- stop MACHINE
- download MACHINE
- configure MACHINE [[OPTION=VALUE] [OPTION=VALUE] ...]
- delete MACHINE
- ssh MACHINE
- restart MACHINE


**********
Ressources
**********

* Documentation: https://github.com/novagile/vagrant_vm_manager/
* PyPI page: not released yet
* Code repository: https://github.com/novagile/vagrant_vm_manager/
* Bugtracker: https://github.com/novagile/vagrant_vm_manager/issues
* Continuous integration: not setup yet
